#!/usr/bin/env ruby
# -*- encoding: utf-8 -*-
#
# Copyright (c) 2011 Sung Pae <self@sungpae.com>
# Distributed under the MIT license.
# http://www.opensource.org/licenses/mit-license.php

require 'optparse'
require 'ostruct'
require 'shellwords'

class Airportnetworks
  attr_reader :options

  def initialize opts = {}
    @options = OpenStruct.new opts
    options.interface ||= 'en1'
  end

  def parser
    @parser ||= OptionParser.new nil, 20 do |opt|
      opt.banner = %Q(\
        Usage: #{File.basename __FILE__} command args

        Commands:
            list    List remembered networks
            add     Add given network with given security type
            clear   Clear all (or given) remembered networks

        Options:\
      ).gsub /^ {8}/, ''

      opt.on '-i', '--interface NAME', "BSD interface; #{options.interface} by default" do |arg|
        options.interface = arg
      end
    end
  end

  def sh *args
    warn args.join(' ')
    system *args
  end

  def to_a
    %x(/usr/sbin/networksetup -listpreferredwirelessnetworks #{options.interface.shellescape}).lines.drop(1).map &:strip
  end

  def add name, security = 'WPA2'
    sh '/usr/sbin/networksetup', '-addpreferredwirelessnetworkatindex', options.interface, name, to_a.size.to_s, security
  end

  def clear names = nil
    if names.nil? or names.empty?
      sh '/usr/sbin/networksetup', '-removeallpreferredwirelessnetworks', options.interface
    else
      names.each do |name|
        sh '/usr/sbin/networksetup', '-removepreferredwirelessnetwork', options.interface, name
      end
    end
  end

  def run arguments = []
    args = parser.parse arguments

    case args.first
    when 'list', nil then puts to_a
    when 'add'       then add *args.drop(1)
    when 'clear'     then clear args.drop(1)
    else abort parser.help
    end
  end
end

$0 = File.basename(__FILE__) and Airportnetworks.new.run ARGV if $0 == __FILE__
