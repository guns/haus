#!/usr/bin/env python
#
# Copyright (c) 2023 Sung Pae <self@sungpae.com>
# Distributed under the MIT license.
# http://www.opensource.org/licenses/mit-license.php

"""
Format and lint python source files.
"""

import os
import shlex
import subprocess
import sys
from argparse import ArgumentParser


def parse_args(args):
    parser = ArgumentParser(description=__doc__)
    parser.add_argument("-s", "--strict", action="store_true")
    parser.add_argument("paths", metavar="path", nargs="+")
    return parser.parse_args(args)


def run(*cmd: str):
    if subprocess.run(cmd).returncode != 0:
        print("Command failed: " + shlex.join(cmd), file=sys.stderr)
        sys.exit(1)


def lint(path, strict=False):
    run("autoimport", path)
    run("isort", "--quiet", path)
    run("black", "-q", path)
    mypy = [
        "mypy",
        "--no-error-summary",
        "--warn-redundant-casts",
        "--warn-unused-ignores",
        "--warn-unreachable",
        "--check-untyped-defs",
        "--no-implicit-reexport",
        "--cache-dir=" + os.path.expanduser("~/.cache/mypy_cache/"),
    ]
    if strict:
        mypy.extend(
            [
                "--warn-return-any",
                "--disallow-untyped-calls",
                "--disallow-untyped-defs",
                "--disallow-untyped-decorators",
                "--strict-equality",
                "--strict-concatenate",
                "--strict",
            ]
        )
    run(*mypy, path)
    run("flake8", "--max-line-length=88", "--extend-ignore=E203", path)


def execute(args):
    opts = parse_args(args)

    for path in opts.paths:
        if os.path.exists(path):
            lint(path, opts.strict)


if __name__ == "__main__":
    sys.exit(execute(sys.argv[1:]))
