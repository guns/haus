#!/usr/bin/env ruby
# -*- encoding: utf-8 -*-
#
# Copyright (c) 2011 Sung Pae <sung@metablu.com>
# Distributed under the MIT license.
# http://www.opensource.org/licenses/mit-license.php

require 'optparse'
require 'shellwords'

class Airportpower
  attr_accessor :arguments, :interface

  def initialize args = []
    @arguments = args.clone
    @interface = 'en1'
  end

  def options
    @options ||= OptionParser.new nil, 24 do |opt|
      opt.banner = %Q{\
        Set or toggle your Mac's airport card via `networksetup`.

        Usage: #{File.basename __FILE__} [on|off|toggle|status]

        Options:
      }.gsub /^ +/, ''

      opt.on '-i', '--interface NAME', "BSD interface; #{interface} by default" do |arg|
        @interface = arg
      end
    end
  end

  def status
    %x(networksetup -getairportpower #{interface.shellescape})[/\w+$/].downcase
  end

  %w[on off].each do |m|
    define_method m do
      system *%W[networksetup -setairportpower #{interface} #{m}]
    end
  end

  def toggle
    send (status == 'on' ? :off : :on)
  end

  def run
    args = options.parse arguments
    abort options.help if args.size > 1
    raise 'OS X only!' unless RUBY_PLATFORM[/darwin/]

    case cmd = args.first
    when 'status', nil then status
    when 'toggle'      then toggle
    when 'on'          then on
    when 'off'         then off
    else abort options.help
    end

    puts "Airport is #{status}"
  end
end

Airportpower.new(ARGV).run if __FILE__ == $0
