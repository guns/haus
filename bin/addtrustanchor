#!/usr/bin/env python
#
# Copyright (c) 2016-2023 Sung Pae <self@sungpae.com>
# Distributed under the MIT license.
# http://www.opensource.org/licenses/mit-license.php

"""
Add a trust anchor to the system certificate store from a domain or URL.
"""

import os
import sys
from argparse import ArgumentParser
from pathlib import Path
from urllib.parse import urlparse

import haus

TRUST_ANCHORS_DIR = "/etc/ca-certificates/trust-source/anchors"


def parse_args(args):
    parser = ArgumentParser(description=__doc__)
    parser.add_argument(
        "-d",
        "--dir",
        action="store",
        default=TRUST_ANCHORS_DIR,
        type=os.path.normpath,
        help=f"default: {TRUST_ANCHORS_DIR}",
    )
    parser.add_argument("domain_or_url")
    return parser.parse_args(args)


def is_certfile(path):
    return (
        os.path.exists(path) and Path(path).read_text().find("BEGIN CERTIFICATE") >= 0
    )


def execute(args):
    opts = parse_args(args)
    domain = urlparse(opts.domain_or_url).hostname or opts.domain_or_url
    cert = os.path.join(opts.dir, f"{domain}.crt")
    haus_certs = f"{os.environ.get('cdhaus')}/share/ca-certificates/mozilla.crt"

    haus.run(["cert", "add", "--certfile", cert, "--", domain], check=True)
    haus.run(["vim", "-O", "--", cert, haus_certs], check=True)

    if is_certfile(cert):
        if os.path.abspath(opts.dir) == TRUST_ANCHORS_DIR:
            haus.run("update-ca-trust", check=True)
            print("Updated CA trust\n", file=sys.stderr)

        return

    os.remove(cert)
    print(f"Removed {cert}", file=sys.stderr)
    return 1


if __name__ == "__main__":
    sys.exit(execute(sys.argv[1:]))
