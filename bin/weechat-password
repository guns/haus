#!/usr/bin/env ruby
# -*- encoding: utf-8 -*-
#
# Copyright (c) 2011 Sung Pae <self@sungpae.com>
# Distributed under the MIT license.
# http://www.opensource.org/licenses/mit-license.php

require 'optparse'
require 'ostruct'
require 'etc'
require 'util/password'

class WeechatPassword
  class << self
    def fifo
      fs = Dir[File.expand_path '~/.weechat/weechat_fifo_*']

      case fs.size
      when 0 then raise 'No Weechat FIFO found!'
      when 1 then fs.first
      else raise 'Multiple Weechat FIFOs found!'
      end
    end

    def authenticate server = 'freenode', username = Etc.getlogin, password = nil
      pipe       = fifo
      password ||= $stdin.readline.chomp

      File.open pipe, 'w' do |f|
        f.puts "irc.server.#{server} */msg NickServ identify #{username} #{password}"
      end
    end
  end

  attr_reader :options

  def initialize opts = {}
    @options = OpenStruct.new opts
  end

  def parser
    @parser ||= OptionParser.new nil, 20 do |opt|
      opt.banner = <<-BANNER.gsub /^ +/, ''
        Authenticate to an IRC server via the Weechat FIFO writer.

        Usage: #{File.basename __FILE__} [server [username]]

        Username is `#{Etc.getlogin}` and server is `freenode` by default.

        Options:
      BANNER

      opt.on '-l', '--length N', Integer, 'Npass length' do |arg|
        options.length = arg
      end
    end
  end

  def run arguments = []
    args = parser.parse arguments
    abort parser.help if args.size > 2
    args.push Util::Password.npass_1(options.length) if options.length
    self.class.authenticate *args
  end
end

$0 = File.basename(__FILE__) and WeechatPassword.new.run ARGV if $0 == __FILE__
