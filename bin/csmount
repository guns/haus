#!/usr/bin/env python
#
# Copyright (c) 2014-2023 Sung Pae <self@sungpae.com>
# Distributed under the MIT license.
# http://www.opensource.org/licenses/mit-license.php

"""
cryptsetup luksOpen + mount
"""

import os
import shlex
import sys
from argparse import ArgumentParser

import haus


def parse_args(args):
    parser = ArgumentParser(description=__doc__, add_help=False)
    parser.add_argument("-h", "--header")
    parser.add_argument("-k", "--key-file")
    parser.add_argument("-n", "--no-mount", action="store_true")
    parser.add_argument("-o", "--mount-options", metavar="OPTS", default="")
    parser.add_argument("-O", "--cryptsetup-options", metavar="OPTS", default="")
    parser.add_argument("--help", action="help")
    parser.add_argument("device", type=os.path.normpath)
    parser.add_argument("mountpoint", type=os.path.normpath)
    return parser.parse_args(args)


def execute(args):
    opts = parse_args(args)
    dm_name = os.path.basename(os.path.abspath(opts.mountpoint))
    cmd = ["cryptsetup"]
    if opts.header:
        cmd.extend(["--header", opts.header])
    if opts.key_file:
        cmd.extend(["--key-file", opts.key_file])
    if opts.cryptsetup_options:
        cmd.extend(shlex.split(opts.cryptsetup_options))
    cmd.extend(["luksOpen", "--", opts.device, dm_name])

    if haus.run(cmd).returncode != 0:
        return 1

    if opts.no_mount:
        return 0

    mountopts = ",".join(shlex.split(opts.mount_options))
    return haus.run(
        ["mount", "-o", mountopts, "--", f"/dev/mapper/{dm_name}", opts.mountpoint]
    )


if __name__ == "__main__":
    execute(sys.argv[1:])
