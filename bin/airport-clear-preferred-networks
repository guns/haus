#!/usr/bin/env ruby
# -*- encoding: utf-8 -*-
#
# Copyright (c) 2011 Sung Pae <self@sungpae.com>
# Distributed under the MIT license.
# http://www.opensource.org/licenses/mit-license.php

require 'optparse'
require 'shellwords'

class AirportClearPreferredNetworks
  def initialize args = []
    @args  = args
    @pb    = '/usr/libexec/PlistBuddy'
  end

  def options
    OptionParser.new 'Clear the Airport preferred networks list. Works on OS X 10.5+'
  end

  def pbcmd cmd
    raise 'No write privileges!' if cmd =~ /delete/i and not File.writable? @prefs
    %x(#{[@pb, '-c', cmd, @prefs].shelljoin} 2>/dev/null)
  end

  def clear_snow_leopard
    @prefs = '/Library/Preferences/SystemConfiguration/preferences.plist'

    # extract first guid (most systems will have one airport interface)
    guid = pbcmd('Print :Sets').split[2]
    key  = ":Sets:#{guid}:Network:Interface:en1:AirPort:PreferredNetworks"
    list = pbcmd("Print #{key}").split("\n").grep(/SSID_STR/)

    if list.empty?
      puts '# No preferred networks'
    else
      puts '# Current preferred networks:'
      puts list.map(&:strip)
      # remove and replace with empty array
      if pbcmd("Delete #{key}") && pbcmd("Add #{key} array")
        puts '# List deleted'
      else
        puts '# Error removing list'
      end
    end
  end

  def clear_osx
    @prefs = '/Library/Preferences/SystemConfiguration/com.apple.airport.preferences.plist'

    ssids, i = [], 0
    loop do
      ssid = pbcmd("Print :RememberedNetworks:#{i}:SSIDString").chomp
      break if ssid.empty?
      ssids << ssid
      i += 1
    end

    if ssids.empty?
      puts '# No preferred networks'
    else
      puts '# Current preferred networks:'
      puts ssids.map(&:strip)
      if pbcmd('Delete :RememberedNetworks')
        puts '# List deleted'
      else
        puts '# Error removing list!'
      end
    end
  end

  def clear_list
    raise 'OS X only!' unless RUBY_PLATFORM[/darwin/]
    raise "Could not find or execute #{@pb}!" unless File.executable? @pb

    case %x(sw_vers -productVersion).split('.')[1].to_i
    when 0..4 then raise 'OS X 10.5+ only!'
    when 5..6 then clear_snow_leopard
    else clear_osx
    end
  end

  def run
    args = options.parse! @args
    abort options.to_s unless args.empty?
    clear_list
  end
end

AirportClearPreferredNetworks.new(ARGV).run if __FILE__ == $0
