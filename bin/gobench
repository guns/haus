#!/usr/bin/env ruby
# -*- encoding: utf-8 -*-
#
# Copyright (c) 2018 Sung Pae <self@sungpae.com>
# Distributed under the MIT license.
# http://www.opensource.org/licenses/mit-license.php

require 'optparse'

class Gobench
  DEFAULTS = {
    :cpunodebind => '0',
    :physcpubind => '+0',
  }

  def initialize opts = {}
    DEFAULTS.each_key { |k| instance_variable_set "@#{k}", opts.has_key?(k) ? opts[k] : DEFAULTS[k] }
  end

  def parser
    @parser ||= OptionParser.new nil, 20 do |opt|
      opt.banner = <<-BANNER.gsub /^ +/, ''
        Usage: #{File.basename __FILE__} [options] bench-regexp [go-test-args â€¦]

        Options:
      BANNER

      opt.on '-N', '--cpunodebind', 'Same as `numactl -N`' do |arg|
        @cpunodebind = arg
      end

      opt.on '-C', '--physcpubind CPUS', 'Same as `numactl -C`' do |arg|
        @physcpubind = arg
      end
    end
  end

  def expand s
    IO.popen ['/usr/bin/expand'], 'r+' do |io|
      io.write s
      io.close_write
      return io.read
    end
  end

  def bench *args
    if $stdin.tty?
      puts %x(go version)
    else
      puts "//\t#{%x(go version)}"
    end

    IO.popen ['numactl', '--cpunodebind', @cpunodebind, '--physcpubind', @physcpubind,
              'go', 'test', '-run=NONE', "-bench=#{args[0] || '.'}", '-benchmem',
              *args.drop(1)], 'r' do |io|
      if $stdin.tty?
        while line = io.gets("\n")
          puts line
        end
      else
        out = io.read
        puts expand(out).gsub(/^/, "//\t")
      end
    end
  end

  def run arguments = []
    args = parser.parse arguments
    bench *args
  end
end

$0 = File.basename(__FILE__) and Gobench.new.run ARGV if $0 == __FILE__
