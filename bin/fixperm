#!/usr/bin/env ruby
# -*- encoding: utf-8 -*-
#
# Copyright (c) 2010-2017 Sung Pae <self@sungpae.com>
# Distributed under the MIT license.
# http://www.opensource.org/licenses/mit-license.php

require 'optparse'
require 'find'
require 'haus/logger'
require 'haus/ls_colors'

class Fixperm
  include Haus::Loggable

  DEFAULTS = {
    :umask => nil,
    :recurse => false,
    :noop => false
  }

  def initialize opts = {}
    DEFAULTS.each_key { |k| instance_variable_set "@#{k}", opts.has_key?(k) ? opts[k] : DEFAULTS[k] }
    @umask ||= File.umask
  end

  def parser
    @parser ||= OptionParser.new nil, 16 do |opt|
      opt.banner = <<-BANNER.gsub /^ +/, ''
        Change mode of files to match the current umask (typically 0022).
        Skips symbolic links.

        *Be careful*

        Usage: #{File.basename __FILE__} [options] path ...

        Options:
      BANNER

      opt.on '-u', '--umask N', 'Explicitly set umask (octal)' do |arg|
        @umask = arg.to_i 8
      end

      opt.on '-r', '--recurse', 'Recurse into directories' do
        @recurse = true
      end

      opt.on '-n', '--noop', 'Only show what would happen' do
        @noop = true
      end
    end
  end

  def normalize files
    (@recurse ? files.flat_map { |f| Find.find(f).to_a } : files).each do |f|
      stat = File.lstat f
      mode = if stat.ftype == 'directory' or File.basename(File.dirname File.expand_path(f)) =~ /\As?bin\z/
        (0777 & ~@umask)
      else
        (0666 & ~@umask)
      end

      next if stat.ftype == 'link' or (stat.mode & 0777) == mode

      log 'chmod %04o â†’ %04o on ' % [stat.mode & 0777, mode], [f, Haus::LSColors[f]]
      File.chmod mode, f unless @noop
    end
  end

  def run arguments = []
    args = parser.parse arguments
    abort parser.help if args.empty?
    normalize args
  end
end

$0 = File.basename(__FILE__) and Fixperm.new.run ARGV if __FILE__ == $0
