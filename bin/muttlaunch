#!/usr/bin/env ruby
# -*- encoding: utf-8 -*-
#
# Copyright (c) 2012-2017 Sung Pae <self@sungpae.com>
# Distributed under the MIT license.
# http://www.opensource.org/licenses/mit-license.php

require 'optparse'

class Muttlaunch
  DEFAULTS = { :force => false }

  def initialize opts = {}
    DEFAULTS.each_key { |k| instance_variable_set "@#{k}", opts.has_key?(k) ? opts[k] : DEFAULTS[k] }
  end

  def parser
    @parser ||= OptionParser.new nil, 20 do |opt|
      opt.banner = <<-BANNER.gsub /^ +/, ''
        Usage: #{File.basename __FILE__} [options]

        Options:
      BANNER

      opt.on '-f', '--force' do
        @force = true
      end
    end
  end

  def active?
    system 'pkill', '--exact', '-0', 'mutt'
  end

  def unicode_bindings
    File.read(File.expand_path '~/.inputrc.d/utf-8')
        .scan(/^"\\e(.)": "(.+)"/)
        .reduce([]) { |a, (k, c)| a << '-e' << %Q(macro editor "\\e#{k}" #{c}) }
  end

  def launch *args
    exec 'mutt', '-n', *unicode_bindings, *args
  end

  def run arguments = []
    args = parser.parse arguments
    unless @force
      abort if active?
    end
    launch *args
  end
end

$0 = File.basename(__FILE__) and Muttlaunch.new.run ARGV if $0 == __FILE__
