#!/usr/bin/env ruby
# -*- encoding: utf-8 -*-
#
# Copyright (c) 2016 Sung Pae <self@sungpae.com>
# Distributed under the MIT license.
# http://www.opensource.org/licenses/mit-license.php

require 'optparse'
require 'shellwords'
require 'fileutils'

class Archivesrc
  DEFAULTS = {}

  def initialize opts = {}
    DEFAULTS.each_key { |k| instance_variable_set "@#{k}", opts.has_key?(k) ? opts[k] : DEFAULTS[k] }
  end

  def parser
    @parser ||= OptionParser.new nil, 20 do |opt|
      opt.banner = <<-BANNER.gsub /^ +/, ''
        Usage: #{File.basename __FILE__} [options] project-dir â€¦
      BANNER
    end
  end

  def sh *args
    warn args.shelljoin
    system *args
  end

  def archive_path dir
    src = File.expand_path ENV['cdsrc'] || '~/src'
    name = File.basename File.expand_path(dir)
    "#{src}/ARCHIVE/#{name}.tar.xz"
  end

  def archive dir
    Dir.chdir dir do
      sh 'git', 'clean', '--force', '-d', '-x'
      sh 'git', 'gc', '--aggressive', '--prune=all'
    end

    Dir.chdir File.join(dir, '..') do
      path = archive_path dir
      abort "#{path} already exists!" if File.exists? path

      if sh 'tar', 'acf', archive_path(dir), dir
        FileUtils.rm_rf File.expand_path(dir), :verbose => true
      else
        abort
      end
    end
  end

  def run arguments = []
    args = parser.parse arguments
    abort parser.help if args.empty?

    args.each do |dir|
      archive dir.chomp('/')
    end
  end
end

$0 = File.basename(__FILE__) and Archivesrc.new.run ARGV if $0 == __FILE__
