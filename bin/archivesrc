#!/usr/bin/env python
#
# Copyright (c) 2016-2023 Sung Pae <self@sungpae.com>
# Distributed under the MIT license.
# http://www.opensource.org/licenses/mit-license.php

"""
Archive old projects.
"""

import os
import shutil
import sys
from argparse import ArgumentParser

import haus


def parse_args(args):
    parser = ArgumentParser(description=__doc__)
    parser.add_argument(
        "directories", nargs="+", metavar="directory", type=os.path.normpath
    )
    return parser.parse_args(args)


def get_archive_path(directory):
    src = os.getenv("cdsrc") or "/opt/src"
    name = os.path.basename(directory)
    return f"{src}/ARCHIVE/{name}.tar.gz"


def archive(src):
    dst = get_archive_path(src)
    if os.path.exists(dst):
        raise RuntimeError(f"{dst} already exists")

    haus.run(["git", "-C", src, "clean", "--force", "-d", "-x"], check=True)
    haus.run(["git", "-C", src, "gc", "--aggressive", "--prune=all"], check=True)
    haus.run(["tar", "-C", os.path.join(src, ".."), "-acf", dst, "--", src], check=True)
    haus.print(f"Removing {src}", ["yellow", "bold"], file=sys.stderr)
    shutil.rmtree(src)


def execute(args):
    opts = parse_args(args)
    for path in opts.directories:
        archive(path)


if __name__ == "__main__":
    sys.exit(execute(sys.argv[1:]))
