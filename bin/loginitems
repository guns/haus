#!/usr/bin/env ruby
# -*- encoding: utf-8 -*-
#
# Copyright (c) 2011 Sung Pae <self@sungpae.com>
# Distributed under the MIT license.
# http://www.opensource.org/licenses/mit-license.php

require 'optparse'
require 'ostruct'
require 'shellwords'
require 'yaml'

class Loginitems
  attr_reader :options

  def initialize opts = {}
    @options = OpenStruct.new opts
    options.rcfile ||= File.expand_path '~/.loginitems'
  end

  def parser
    @parser ||= OptionParser.new nil, 16 do |opt|
      opt.banner = %Q(\
        Launch apps from #{options.rcfile.inspect}

        Applications should be listed in dictionary format:

            dnsmasq: sudo dnsmasq
            Mail: /Applications/Mail.app

        Keys should match the output of `ps o ucomm'.
        Values that end in `.app' will be opened with `open -g'

        Usage: #{File.basename __FILE__} [options]

        Options:\
      ).gsub /^ {8}/, ''

      opt.on '-f', '--file PATH', 'Read apps from an alternate file' do |arg|
        options.rcfile = File.expand_path arg
      end

      opt.on '-e', '--edit', 'Open config file in EDITOR' do
        exec *((ENV['EDITOR'] || 'vim').shellsplit.push options.rcfile)
      end
    end
  end

  def running? name
    %x(ps axo ucomm).lines.map(&:strip).include? name
  end

  def open app
    Process.wait fork {
      env = {}
      env['PATH'   ] = %x(bash ~/.bashpath).chomp
      env['LANG'   ] = 'en_US.UTF-8'
      env['DISPLAY'] = ENV['DISPLAY']
      env['RUBYLIB'] = ENV['RUBYLIB']
      ENV.replace env
      system *(app =~ /\.app\z/ ? %W[open -g #{File.expand_path app}] : app.shellsplit)
    }
  end

  def launch!
    YAML.load_file(options.rcfile).each do |name, app|
      if running? name.to_s
        puts ":: #{name} is already running."
      else
        puts "-> #{app}"
        open app.to_s
      end
    end
  end

  def run arguments = []
    args = parser.parse arguments
    abort parser.help unless args.empty?
    abort 'OS X only!' unless RUBY_PLATFORM =~ /darwin/i
    launch!
  end
end

$0 = File.basename(__FILE__) and Loginitems.new.run ARGV if $0 == __FILE__
