#!/usr/bin/env ruby
# -*- encoding: utf-8 -*-
#
# Copyright (c) 2014-2015 Sung Pae <self@sungpae.com>
# Distributed under the MIT license.
# http://www.opensource.org/licenses/mit-license.php

require 'optparse'
require 'shellwords'

class FindWrapper
  DEFAULTS = {
    :pred => nil,
    :noop => false,
  }

  def initialize opts = {}
    DEFAULTS.each_key { |k| instance_variable_set "@#{k}", opts.has_key?(k) ? opts[k] : DEFAULTS[k] }
  end

  def parser
    @parser ||= OptionParser.new nil, 28 do |opt|
      opt.banner = <<-BANNER.gsub /^ +/, ''
        Usage: #{File.basename __FILE__} [options] [find-args]

        Options:
      BANNER

      opt.on '-n', '--noop' do
        @noop = true
      end

      opt.on '-p', '--predicate find-expr', 'Insert find-expr after the path argument' do |arg|
        @pred = arg.shellsplit
      end
    end
  end

  def make_find_glob pattern
    case pattern
    when /\A\^.*\$\z/ then pattern.sub(/\^/, '').chomp('$')
    when /\A\^/       then '%s*' % pattern.sub(/\^/, '')
    when /\$\z/       then '*%s' % pattern.chomp('$')
    else                   '*%s*' % pattern
    end
  end

  def make_command arguments, pred = nil
    cmd = %w[find]

    return cmd.concat ['.', *pred] if arguments.empty?

    args = arguments.dup

    cmd.push File.directory?(args.first) ? args.shift.chomp('/') : '.'
    cmd.concat pred if pred

    if args.first =~ /\A-.*|\A\(\z/
      cmd.concat args
    elsif args.any?
      pat = args[0]
      test = pat.index('/') ? '-ipath' : '-iname'
      cmd.push test, make_find_glob(pat), *args.drop(1)
    end

    if cmd.delete '-print0'
      cmd.push '-print0'
    else
      cmd.push '-print'
    end

    cmd.push '-delete' if cmd.delete '-delete'

    cmd
  end

  def run arguments = []
    args = parser.parse arguments
    cmd = make_command args, @pred
    if @noop
      puts cmd.shelljoin
    else
      warn "\e[32;1m%s\e[0m" % cmd.shelljoin
      exec *cmd
    end
  end
end

$0 = File.basename(__FILE__) and FindWrapper.new.run ARGV if $0 == __FILE__
