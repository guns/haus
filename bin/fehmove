#!/usr/bin/env ruby
# -*- encoding: utf-8 -*-
#
# Copyright (c) 2014-2017 Sung Pae <self@sungpae.com>
# Distributed under the MIT license.
# http://www.opensource.org/licenses/mit-license.php

require 'shellwords'
require 'optparse'

dirs = []
op = 'mv'
feh_opts = %w[-Smtime]
rename = false

options = OptionParser.new do |opt|
  opt.banner = "USAGE: fehmove [options] [feh-args]\n\nOptions:\n"
  opt.on('-c', '--copy') { op = 'cp' }
  opt.on('-d', '--dir DIR') { |d| dirs << d.chomp('/') if Dir.exists? d and File.writable? d }
  opt.on('-r', '--recursive') { feh_opts << '--recursive' }
  opt.on('-R', '--rename') { rename = true }
  opt.on('-O', '--feh-opts OPTS') { |o| feh_opts.concat o.shellsplit }
end

args = options.parse ARGV

actions = dirs.flat_map.with_index do |d, i|
  if rename
    ["--action#{i+1}",
     %Q(ext="$(ruby -e "puts File.extname(ARGV[0])" -- %F)";
        name="$(zenity --entry --text="%f -> #{d}/_${ext}")";
        dst=#{d.shellescape}/"${name}${ext}";
        if test -z "$name"; then
          #{op} -n -- %F #{d.shellescape};
        elif test -e "$dst"; then
          zenity --info --text "$dst already exists!";
        else
          #{op} -n -- %F "$dst";
        fi).gsub(/\n\s+/, ' ')]
  else
    ["--action#{i+1}", %Q(#{op} -n -- %F #{d.shellescape})]
  end
end

exec 'feh', '--draw-actions', *feh_opts, *actions, *args
