#!/usr/bin/env ruby
# -*- encoding: utf-8 -*-
#
# Copyright (c) 2015-2017 Sung Pae <self@sungpae.com>
# Distributed under the MIT license.
# http://www.opensource.org/licenses/mit-license.php

require 'optparse'
load File.expand_path('../ouilookup', __FILE__)

class Randmac
  DEFAULTS = { :prefix => nil, :colons => true }

  def initialize opts = {}
    DEFAULTS.each_key { |k| instance_variable_set "@#{k}", opts.has_key?(k) ? opts[k] : DEFAULTS[k] }
  end

  def parser
    @parser ||= OptionParser.new nil, 20 do |opt|
      opt.banner = <<-BANNER.gsub /^ +/, ''
        Usage: #{File.basename __FILE__} [options] [prefix]

        Options:
      BANNER

      opt.on '-n', '--no-colons' do
        @colons = false
      end
    end
  end

  def randmac prefix = nil
    n = rand 0x1000000000000
    if prefix
      n >>= 24
      n |= prefix << 24
    end
    s = '%012X' % n
    @colons ? s.scan(/\h\h/).join(':') : s
  end

  def run arguments = []
    args = parser.parse arguments
    abort parser.help if args.size > 1

    prefix = case args.first
    when nil                    then nil
    when /\A(\h\h:?\h\h:?\h\h)/ then $1.delete(':').to_i(16)
    else
      Ouilookup.new.grep(args.first).shuffle[0].split("\t", 2)[0].to_i(16)
    end

    puts randmac(prefix)
  end
end

$0 = File.basename(__FILE__) and Randmac.new.run ARGV if $0 == __FILE__
