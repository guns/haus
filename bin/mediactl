#!/usr/bin/env ruby
# -*- encoding: utf-8 -*-
#
# Copyright (c) 2012 Sung Pae <self@sungpae.com>
# Distributed under the MIT license.
# http://www.opensource.org/licenses/mit-license.php

require 'optparse'

class Mediactl
  def parser
    @parser ||= OptionParser.new nil, 20 do |opt|
      opt.banner = <<-BANNER.gsub /^ +/, ''
        Control various media playing programs through one interface.

        Usage: #{File.basename __FILE__} toggle|next|prev
      BANNER
    end
  end

  def alive? name
    system 'pkill', '-x', '-0', name
  end

  def pianobar cmd
    fifo = File.expand_path '~/.config/pianobar/ctl'
    File.open(fifo, 'w') { |f| f.puts cmd } if alive? 'pianobar' and File.pipe? fifo
  end

  def cmus cmd
    system 'cmus-remote', cmd if alive? 'cmus'
  end

  def trigger action
    ts = []

    case action
    when 'toggle'
      ts << Thread.new { cmus '--pause' }
      ts << Thread.new { pianobar 'p' }
    when 'next'
      ts << Thread.new { cmus '--next' }
      ts << Thread.new { pianobar 'n' }
    when 'prev'
      ts << Thread.new { cmus '--prev' }
    else
      raise 'Unknown action: %s' % action.inspect
    end

    ts.each &:join
  end

  def run arguments = []
    args = parser.parse arguments
    trigger *args
  end
end

$0 = File.basename(__FILE__) and Mediactl.new.run ARGV if $0 == __FILE__
