#!/usr/bin/env ruby
# -*- encoding: utf-8 -*-
#
# Copyright (c) 2011-2017 Sung Pae <self@sungpae.com>
# Distributed under the MIT license.
# http://www.opensource.org/licenses/mit-license.php
#
# git-summary, inspired by TJ Holowaychuk's git-extras

require 'optparse'

class GitSummary
  DEFAULTS = { :root => nil }

  def initialize opts = {}
    DEFAULTS.each_key { |k| instance_variable_set "@#{k}", opts.has_key?(k) ? opts[k] : DEFAULTS[k] }
    @root ||= File.expand_path '.'
  end

  def parser
    @parser ||= OptionParser.new do |opt|
      opt.banner = <<~BANNER
        Usage: #{File.basename __FILE__} [repo]
      BANNER
    end
  end

  def project_name
    File.basename %x(git rev-parse --show-toplevel).chomp
  end

  def commit_count
    %x(git log --oneline).lines.count
  end

  def file_count
    %x(git ls-files).lines.count
  end

  def authors
    %x(git shortlog --numbered --summary --email)
  end

  def to_s
    Dir.chdir @root do
      [ 'Project: %s'  % project_name,
        'Commits: %d'  % commit_count,
        'Files:   %d'  % file_count,
        "Authors:\n%s" % authors
      ].join "\n"
    end
  end

  def run arguments = []
    args = parser.parse arguments
    abort parser.help if args.size > 1

    @root = args.first if args.first
    puts to_s
  end
end

$0 = File.basename(__FILE__) and GitSummary.new.run ARGV if $0 == __FILE__
