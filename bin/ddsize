#!/usr/bin/env ruby
# -*- encoding: utf-8 -*-
#
# Copyright (c) 2014-2015 Sung Pae <self@sungpae.com>
# Distributed under the MIT license.
# http://www.opensource.org/licenses/mit-license.php

abort 'Usage: ddsize size block-size [dd-args]' unless ARGV.size >= 2

size, bs = ARGV.take(2).map do |arg|
  arg.scan(/([\d\.]+)(\D*)/).reduce 0 do |sum, (num, unit)|
    sum + case unit
    when /\Ag\z/i then num.to_f * 2**30
    when /\Am\z/i then num.to_f * 2**20
    when /\Ak\z/i then num.to_f * 2**10
    else               num.to_f
    end
  end.round
end

dd = %w[dcfldd dd].map { |c| %x(/bin/sh -c "command -v #{c}").chomp }.find do |path|
  File.executable? path
end

raise "#{ARGV[0]} not a multiple of #{ARGV[1]}" if not (size % bs).zero?

cmd = %W[#{dd} bs=#{bs} count=#{size / bs}] + ARGV.drop(2)
warn cmd.join(" ")
exec *cmd
