
#            _     _       _
#   _____  _| |__ | | ____| |
#  / __\ \/ / '_ \| |/ / _` |
#  \__ \>  <| | | |   < (_| |
#  |___/_/\_\_| |_|_|\_\__,_|  guns <self@sungpae.com>
#

# Conventions:
#	super + alt           => Desktop bindings
#	super + control       => Window bindings
#	super + alt + control => Direct actions

super + alt + control + r
	notify --alert --icon gnome-window-manager --title sxhkd 'Reloading bspwmrc and sxhkdrc'; \
	pkill -USR1 -x sxhkd; \
	~/.config/bspwm/bspwmrc

super + alt + control + q
	bspc quit

#
# Desktops {{{1
#

super + alt + space
	bspc desktop --layout next

super + alt + {j,k,button1,button3}
	bspc desktop --focus {next,prev,next,prev}

super + alt + {l,h}
	DIR={next,prev,next,prev}; \
	bspc window --to-desktop "$DIR" && \
	bspc desktop --focus "$DIR"

super + alt + {1-9}
	bspc desktop --focus ^{1-9}

super + alt + shift + {1-9}
	bspc window --to-desktop ^{1-9}

super + alt + control + {1-9}
	bspc desktop --swap ^{1-9}

super + alt + {f,v}
	bspc desktop --flip {vertical,horizontal}

super + alt {r, shift + r}
	bspc desktop --rotate {90,270}

super + alt + {b,e}
	bspc desktop --{balance,equalize}

super + alt + {Next,Prior,button4,button5}
	GAP=$(($(bspc config -d focused window_gap) {+,-,+,-} 4)); \
	bspc config -d focused window_gap $((GAP < 0 ? 0 : GAP))

super + alt + 0
	bspc desktop --cancel-presel

super + alt + w
	feh --bg-fill "$(randfile -r ~/Media/Wallpapers)"

#
# Windows {{{1
#

super + q
	bspc window --close

super + {Tab,shift + Tab}
	bspc window --focus {next,prev}

alt + Tab
	if pkill -x skippy-xd; then \
		bspc window --focus focused; \
	else \
		skippy-xd; \
	fi

super + control + {h,j,k,l}
	bspc window --presel {left,down,up,right}

super + control + shift + {h,j,k,l}
	DIR={left,down,up,right}; \
	bspc window --swap "$DIR" || bspc window --swap "$(if [[ "$DIR" == @(down|right) ]]; then echo "next"; else echo "prev"; fi)"

super + control + {1-9}
	bspc window --ratio 0.{1-9}

# -t, --toggle floating|fullscreen|pseudo_tiled|locked|sticky|private[=on|off]

super + control + f
	bspc window --toggle floating

F11
	bspc window --toggle fullscreen

super + control + shift + p
	bspc window --toggle pseudo_tiled

super + control + x
	bspc window --toggle locked

super + control + s
	bspc window --toggle sticky

super + control + p
	bspc window --toggle private

super + alt + control + {h,j,k,l}
	bspc window --edge {left -10,down +10,up -10,right +10}

super + alt + control + shift + {h,j,k,l}
	bspc window --edge {left +10,down -10,up +10,right -10}

~button1
	bspc pointer --grab focus

super + button{1-3}
	bspc pointer --grab {move,resize_side,resize_corner}

super + !button{1-3}
	bspc pointer --track %i %i

super + @button{1-3}
	bspc pointer --ungrab

#
# Power {{{1
#

{XF86Eject,Pause}
	pkill -HUP -x gpg-agent; sudo -n /usr/bin/powerctl slock

{super + XF86Eject,super + Pause,XF86Sleep}
	sudo -n /usr/bin/powerctl suspend

super + alt + {XF86Eject,Pause,XF86Sleep}
	sudo -n /usr/bin/powerctl reboot

super + alt + control + {XF86Eject,Pause,XF86Sleep}
	sudo -n /usr/bin/powerctl poweroff

control + {XF86Eject,Pause}
	pkill -HUP -x gpg-agent && notify --alert --icon gnupg --title gpg-agent 'SIGHUP'

alt + {XF86Eject,Pause}
	if pgrep -x xautolock; then \
		pkill -x xautolock; \
	else \
		xautolock-launch; \
	fi; \
	if pgrep -x xautolock; then \
		notify --alert --icon system-lock-screen --title xautolock 'enabled'; \
	else \
		notify --warning --icon dialog-warning --title xautlock 'DISABLED'; \
	fi

#
# Audio {{{1
#

{XF86AudioMute,super + KP_Enter}
	ponymix toggle

{XF86AudioLowerVolume,super + KP_Subtract}
	ponymix decrease 5

{XF86AudioRaiseVolume,super + KP_Add}
	ponymix increase 5

super + alt + control + {XF86AudioMute,KP_Enter}
	notify --no-audio --title 'Volume' --icon gnome-alsamixer-icon 'Muting for 30 seconds'; \
	remind 30s -c 'ponymix unmute'; \
	ponymix mute

{super + XF86AudioMute,super + shift + KP_Enter}
	T='♫ alsamixer ♫'; \
	wmctrl -a "$T" || \
	urxvt-client -title "$T" -icon ~/.icons/haus/alsamixergui.svg -g 130x30 -e alsamixer -Vall

{super + shift + XF86AudioMute,super + alt + KP_Enter}
	wmctrl -xa 'Pavucontrol' || pavucontrol

alt + {XF86AudioMute,KP_Enter}
	if pkill -0 -x pulseaudio; then \
		notify --no-audio --icon gnome-alsamixer-icon --title pulseaudio - < <(hwctl toggle-pulseaudio-sink); \
	else \
		notify --no-audio --icon gnome-alsamixer-icon --title ALSA - < <(hwctl toggle-alsa-card); \
	fi

alt + shift + {XF86AudioMute,KP_Enter}
	if pkill -0 -x pulseaudio; then \
		notify --no-audio --icon gnome-alsamixer-icon --title pulseaudio - < <(hwctl toggle-pulseaudio-source); \
	fi

super + alt + control + {space,Left,Right}
	mediactl {toggle,prev,next}

#
# Miscellaneous {{{
#

super + alt + control + shift + {Left,Right,Up,Down}
	xrandr -o {left,right,inverted,normal}

Print
	if scrot -e 'mv "$f" ~/Downloads'; then \
		notify --success 'Screenshot saved to ~/Downloads'; \
	else \
		notify --error 'Screenshot failed'; \
	fi

super + Print
	notify --alert --icon simplescreenrecorder --title scrot 'Window/Selection screenshot mode'; \
	sleep 0.1; \
	if scrot -s -e 'mv "$f" ~/Downloads'; then \
		notify --success 'Screenshot saved to ~/Downloads'; \
	else \
		notify --error 'Screenshot failed'; \
	fi

Scroll_Lock
	if [[ "$(toggle-mouse)" -eq 1 ]]; then \
		notify --alert --icon input-mouse --title Mouse "enabled"; \
	else \
		notify --warning --icon dialog-warning --title Mouse "DISABLED"; \
	fi

shift + Scroll_Lock
	xdotool mousemove 10000 10000

#
# Applications {{{1
#

F2
	wmctrl -xa 'Thunar' || exec thunar ~/Downloads

super + F2
	exec thunar ~/Downloads

F9
	wmctrl -a "$USER ❦ $HOSTNAME"

super + F9
	wmctrl -a "root ❦ $HOSTNAME"

alt + F9
	wmctrl -a "❦ MK-"

shift + F9
	urxvt-client

alt + shift + F9
	urxvt-client -icon ~/.icons/haus/root-terminal.svg -e sudo --set-home --login bash -c 'chown 0 "$(tty)"; exec "$SHELL"'

super + shift + F9
	urxvt-client -e tmuxlaunch -nd

super + alt + shift + F9
	urxvt-client -icon ~/.icons/haus/root-terminal.svg -e sudo --set-home --login bash -c 'chown 0 "$(tty)"; exec "'$(command -v tmuxlaunch)'" -d'

F10
	wmctrl -xa 'Firefox' || exec firefox

shift + F10
	exec firefox

super + F10
	wmctrl -xa 'Chromium' || exec chromium

alt + F10
	wmctrl -a 'Liferea' || exec liferea

F12
	T='✉ Mutt ✉'; \
	wmctrl -a "$T" || wmctrl -a "mutt-$HOSTNAME" || \
	urxvt-client -cd ~/Downloads -g 120x40 -title "$T" -icon ~/.icons/haus/mail.svg -e muttlaunch

super + F12
	urxvt-client -cd ~/Downloads -g 120x40 -title '✉ Mutt ✉' -icon ~/.icons/haus/mail.svg -e muttlaunch --force

alt + F12
	open https://mail.google.com/

super + alt + F12
	open https://voice.google.com/

super + control + e
	urxvt-client -g 80x40 -title '✎ VIM ✎' -icon ~/.icons/haus/vim.svg -e vim

super + control + t
	T="✔ TODO ✔"; \
	wmctrl -a "$T" || wmctrl -a "TODO.org" || \
	urxvt-client -g 80x40 -title "$T" -icon ~/.icons/haus/vim.svg -e vim -c 'Org! TODO'

super + alt + control + t
	remind --query

super + control + m
	T='♫ pianobar ♫'; \
	wmctrl -a "$T" || urxvt-client -title "$T" -icon ~/.icons/haus/pandora.svg -e pianobarlaunch pandora.com/a6286098@drdrb.net

super + control + shift + m
	T='♫ cmus ♫'; \
	wmctrl -a "$T" || urxvt-client -cd ~/Media/Music -title "$T" -icon ~/.icons/haus/music.svg -e cmus

# vim:noet:foldmethod=marker:
