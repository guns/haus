
#   __
#  |  |_.--------.--.--.--.--.
#  |   _|        |  |  |_   _|
#  |____|__|__|__|_____|__.__|  guns <self@sungpae.com>
#

### Server options
# tmux -L NONE -f /dev/null
# tmux show-option -gs | sort -f | perl -pe 's/^/# set-option -gs /'
# tmux show-option -g | sort -f | perl -pe 's/^/# set-option -g /'
# tmux show-option -gw | sort -f | perl -pe 's/^/# set-option -gw /'
# ruby -e 'puts %x(tmux list-keys).lines.sort_by { |l| l.split.drop_while { |w| w =~ /\A(bind-key|-\w)\z/ }.drop(1).join(" ") }'
# ruby -e 'puts %x(tmux list-keys -t vi-copy).lines.sort_by { |l| l.split.drop_while { |w| w =~ /\A(bind-key|-\w)\z/ }.drop(1).join(" ") }'

# set-option -gs buffer-limit 20
set-option -gs escape-time 0
# set-option -gs exit-unattached off
# set-option -gs focus-events off
# set-option -gs message-limit 100
# set-option -gs quiet off
# set-option -gs set-clipboard on
set-option -gs terminal-overrides \
    "*256col*:colors=256, \
      ,xterm*:XT:Ms=\\E]52;%p1%s;%p2%s\\007:Cs=\\E]12;%p1%s\\007:Cr=\\E]112\\007:Ss=\\E[%p1%d q:Se=\\E[2 q, \
       ,rxvt*:XT:Ms=\\E]52;%p1%s;%p2%s\\007:Cs=\\E]12;%p1%s\\007:Cr=\\E]112\\007:Ss=\\E[%p1%d q:Se=\\E[2 q, \
     ,screen*:XT, \
       ,tmux*:XT"

### Session options

# set-option -g assume-paste-time 1
set-option -g base-index 1
# set-option -g bell-action any
# set-option -g bell-on-alert off
# set-option -g default-command ""
# set-option -g default-shell "/bin/bash"
# set-option -g default-terminal "screen"
# set-option -g destroy-unattached off
# set-option -g detach-on-destroy on
set-option -g display-panes-active-colour colour252
set-option -g display-panes-colour colour96
set-option -g display-panes-time 5000
set-option -g display-time 3000
set-option -g history-limit 65535
# set-option -g lock-after-time 0
set-option -g lock-command "vlock"
# set-option -g lock-server on
set-option -g message-command-style fg=black,bg=colour96,italics
set-option -g message-style fg=black,bg=colour96,italics
set-option -g mouse-resize-pane on
set-option -g mouse-select-pane on
set-option -g mouse-select-window on
set-option -g mouse-utf8 on
set-option -g prefix C-Space
# set-option -g prefix2 none
set-option -g renumber-windows on
set-option -g repeat-time 1000
# set-option -g set-remain-on-exit off
set-option -g set-titles on
run-shell 'tmux set-option -g set-titles-string "$USER ❦ ${HOSTNAME:-$(hostname)} ❦ ##W" >/dev/null'
# set-option -g status on
# set-option -g status-interval 15
# set-option -g status-justify left
# set-option -g status-keys vi
set-option -g status-left ""
set-option -g status-left-length 0
set-option -g status-left-style fg=colour252,bg=colour234
# set-option -g status-position bottom
run-shell 'tmux set-option -g status-right "$USER@${HOSTNAME:-$(hostname)}" >/dev/null'
# set-option -g status-right-length 40
set-option -g status-right-style fg=colour252,bg=colour234
set-option -g status-style fg=colour252,bg=colour234
set-option -g status-utf8 on
set-option -g update-environment \
    "DISPLAY WINDOWID XAUTHORITY \
     SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION \
     DBUS_SESSION_BUS_ADDRESS \
     GPG_AGENT_INFO GPG_TTY"
# set-option -g visual-activity off
# set-option -g visual-bell off
# set-option -g visual-silence off
# set-option -g word-separators " -_@"

### Window options

set-option -gw aggressive-resize on
# set-option -gw allow-rename on
# set-option -gw alternate-screen on
# set-option -gw automatic-rename on
# set-option -gw automatic-rename-format "#{?pane_in_mode,[tmux],#{pane_current_command}}#{?pane_dead,[dead],}"
# set-option -gw c0-change-interval 100
# set-option -gw c0-change-trigger 250
set-option -gw clock-mode-colour colour252
set-option -gw clock-mode-style 24
# set-option -gw force-height 0
# set-option -gw force-width 0
# set-option -gw main-pane-height 24
# set-option -gw main-pane-width 80
set-option -gw mode-keys vi
set-option -gw mode-mouse on
set-option -gw mode-style fg=colour0,bg=colour96
# set-option -gw monitor-activity off
# set-option -gw monitor-silence 0
# set-option -gw other-pane-height 0
# set-option -gw other-pane-width 0
set-option -gw pane-active-border-style fg=colour96,bg=colour0
set-option -gw pane-base-index 1
set-option -gw pane-border-style fg=colour236,bg=colour0
# set-option -gw remain-on-exit off
# set-option -gw synchronize-panes off
# set-option -gw utf8 on
set-option -gw window-status-activity-style fg=colour0,bg=colour96,italics
set-option -gw window-status-bell-style fg=colour0,bg=colour96,italics
set-option -gw window-status-current-format "#I #W#F"
set-option -gw window-status-current-style fg=colour252,bg=colour0,bold,italics
set-option -gw window-status-format "#I #W#F"
# set-option -gw window-status-last-style default
# set-option -gw window-status-separator " "
set-option -gw window-status-style fg=colour252,bg=colour234
# set-option -gw wrap-search on
# set-option -gw xterm-keys off

### Keybindings

unbind-key -a

bind-key          ! break-pane
bind-key          = choose-buffer
bind-key          C choose-client
bind-key          W choose-tree
bind-key          w choose-window
bind-key          t clock-mode
bind-key         \; command-prompt
# bind-key          f command-prompt "find-window '%%'"
# bind-key          . command-prompt "move-window -t '%%'"
bind-key       "\$" command-prompt -I "#S" "rename-session '%%'"
bind-key          , command-prompt -I "#W" "rename-window '%%'"
# bind-key          ' command-prompt -p index "select-window -t ':%%'"
bind-key          x confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind-key          X confirm-before -p "kill-window #W? (y/n)" kill-window
bind-key          / copy-mode \; send-keys "/"
bind-key          \ copy-mode \; send-keys "?"
bind-key        C-b copy-mode -u
bind-key -r       - delete-buffer
bind-key          d detach-client
# bind-key          i display-message
bind-key          q display-panes
bind-key -r       @ join-pane -t :-
bind-key -r     C-^ last-pane
bind-key        "#" list-buffers
bind-key          ? list-keys
bind-key          c new-window -c "#{pane_current_path}"
bind-key          e new-window -c "#{pane_current_path}" vim
bind-key          h new-window -c "#{pane_current_path}" env TERM=screen-256color htop
bind-key          r new-window -c "#{pane_current_path}" sudo --set-home --login bash -c 'chown 0 "$(tty)"; exec "$SHELL"'
bind-key          n command-prompt 'new-window -c "#{pane_current_path}" "%%"'
# bind-key      Space next-layout
bind-key        C-p paste-buffer
bind-key -r       ] next-window
bind-key -r       [ previous-window
bind-key        M-r refresh-client
bind-key -r       J resize-pane -D 1
bind-key -r       H resize-pane -L 1
bind-key -r       L resize-pane -R 1
bind-key -r       K resize-pane -U 1
bind-key -r       z resize-pane -Z
bind-key -r       o rotate-window
bind-key -r       O rotate-window -D
bind-key        M-1 select-layout even-horizontal
bind-key        M-2 select-layout even-vertical
bind-key        M-3 select-layout main-horizontal
bind-key        M-4 select-layout main-vertical
bind-key        M-5 select-layout tiled
bind-key -r     C-j select-pane -D
bind-key -r     C-h select-pane -L
bind-key -r     C-l select-pane -R
bind-key          l select-pane -R
bind-key -r     C-k select-pane -U
bind-key          j select-pane -t :.+
bind-key          k select-pane -t :.-
bind-key          0 select-window -t :0
bind-key          1 select-window -t :1
bind-key          2 select-window -t :2
bind-key          3 select-window -t :3
bind-key          4 select-window -t :4
bind-key          5 select-window -t :5
bind-key          6 select-window -t :6
bind-key          7 select-window -t :7
bind-key          8 select-window -t :8
bind-key          9 select-window -t :9
bind-key    C-Space send-prefix
bind-key        "~" show-messages
bind-key          s split-window -c "#{pane_current_path}"
bind-key          S command-prompt 'split-window -c #{pane_current_path} "%%"'
bind-key          v split-window -c "#{pane_current_path}" -h
bind-key          V command-prompt 'split-window -c #{pane_current_path} -h "%%"'
bind-key          E split-window -c "#{pane_current_path}" -h vim
bind-key          R split-window -c "#{pane_current_path}" -h sudo --set-home --login bash -c 'chown 0 $(tty); exec ${SHELL:-$(command -v bash)}'
bind-key        C-z suspend-client
bind-key -r     M-j swap-pane -D
bind-key -r     M-k swap-pane -U
bind-key -r     M-l swap-pane -d -s : -t :.+
bind-key -r     M-h swap-pane -d -s : -t :.-
# bind-key          L switch-client -l
bind-key -r       ) switch-client -n
bind-key -r       ( switch-client -p

bind-key -r       } swap-window -s : -t :+
bind-key -r       { swap-window -s : -t :-
bind-key        C-a set-option -w monitor-activity
bind-key          a set-option automatic-rename on
bind-key        C-r source-file ~/.tmux.conf \; display-message "Reloaded ~/.tmux.conf"

if-shell '((EUID > 0))' '\
    bind-key M new-window -c ~/Mail -t 0 \; send-keys -t 0 "mbwatch-daemon " \; rename-window Mail \; move-window -r ; \
    bind-key P new-window -c ~/Media/Music env TERM=screen-256color cmus ; \
    bind-key i new-window -c ~/.weechat env TERM=screen-256color weechat \; rename-window irc ; \
    bind-key m new-window -c ~/Downloads env TERM=screen-256color muttlaunch -f ; \
    bind-key p new-window -c ~/Downloads pianobarlaunch pandora.com/a6286098@drdrb.net ; \
'

### Modal bindings

unbind-key -t vi-copy -a

bind-key -t vi-copy    '"' start-named-buffer
bind-key -t vi-copy    '$' end-of-line
bind-key -t vi-copy      , jump-reverse
bind-key -t vi-copy      / search-forward
bind-key -t vi-copy      0 start-of-line
bind-key -t vi-copy      1 start-number-prefix
bind-key -t vi-copy      2 start-number-prefix
bind-key -t vi-copy      3 start-number-prefix
bind-key -t vi-copy      4 start-number-prefix
bind-key -t vi-copy      5 start-number-prefix
bind-key -t vi-copy      6 start-number-prefix
bind-key -t vi-copy      7 start-number-prefix
bind-key -t vi-copy      8 start-number-prefix
bind-key -t vi-copy      9 start-number-prefix
bind-key -t vi-copy      : goto-line
bind-key -t vi-copy     \; jump-again
bind-key -t vi-copy      ? search-backward
bind-key -t vi-copy      A append-selection
bind-key -t vi-copy      B previous-space
bind-key -t vi-copy BSpace cursor-left
bind-key -t vi-copy C-Down scroll-down
bind-key -t vi-copy   C-Up scroll-up
bind-key -t vi-copy    C-b page-up
bind-key -t vi-copy    C-c cancel
bind-key -t vi-copy    C-d halfpage-down
bind-key -t vi-copy    C-e scroll-down
bind-key -t vi-copy    C-f page-down
bind-key -t vi-copy    C-h cursor-left
bind-key -t vi-copy    C-j copy-selection
bind-key -t vi-copy    C-u halfpage-up
bind-key -t vi-copy    C-y scroll-up
bind-key -t vi-copy      D copy-end-of-line
bind-key -t vi-copy   Down cursor-down
bind-key -t vi-copy      E next-space-end
bind-key -t vi-copy  Enter copy-selection
bind-key -t vi-copy      y copy-selection
bind-key -t vi-copy Escape clear-selection
bind-key -t vi-copy      F jump-backward
bind-key -t vi-copy      G history-bottom
bind-key -t vi-copy      H top-line
bind-key -t vi-copy      J scroll-down
bind-key -t vi-copy      K scroll-up
bind-key -t vi-copy      L bottom-line
bind-key -t vi-copy   Left cursor-left
bind-key -t vi-copy      M middle-line
bind-key -t vi-copy      N search-reverse
bind-key -t vi-copy  NPage page-down
bind-key -t vi-copy  PPage page-up
bind-key -t vi-copy  Right cursor-right
bind-key -t vi-copy  Space cursor-right
bind-key -t vi-copy      v begin-selection
bind-key -t vi-copy      T jump-to-backward
bind-key -t vi-copy     Up cursor-up
bind-key -t vi-copy      V select-line
bind-key -t vi-copy      W next-space
bind-key -t vi-copy      ^ back-to-indentation
bind-key -t vi-copy      b previous-word
bind-key -t vi-copy      e next-word-end
bind-key -t vi-copy      f jump-forward
bind-key -t vi-copy      g history-top
bind-key -t vi-copy      h cursor-left
bind-key -t vi-copy      j cursor-down
bind-key -t vi-copy      k cursor-up
bind-key -t vi-copy      l cursor-right
bind-key -t vi-copy      n search-again
bind-key -t vi-copy      o other-end
bind-key -t vi-copy      q cancel
bind-key -t vi-copy      t jump-to-forward
bind-key -t vi-copy    C-v rectangle-toggle
bind-key -t vi-copy      w next-word
