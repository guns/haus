
#   __
#  |  |_.--------.--.--.--.--.
#  |   _|        |  |  |_   _|
#  |____|__|__|__|_____|__.__|  guns <self@sungpae.com>
#

# tmux -L NONE -f /dev/null
# bash -c '
#   printf "### Server options\n\n"
#   tmux show-option -gs | sort -f | perl -pe "s/^/# set-option -gs /"
#   printf "\n### Session options\n\n"
#   tmux show-option -g | sort -f | perl -pe "s/^/# set-option -g /"
#   printf "\n### Window options\n\n"
#   tmux show-option -gw | sort -f | perl -pe "s/^/# set-option -gw /"
#   printf "\n### Keybindings\n\nunbind-key -a\n\n"
#   ruby -e "puts %x(tmux list-keys -T root).lines.sort_by { |l| l.split.drop_while { |w| w =~ /\A(bind-key|-\w)\z/ }.drop(2).join(%q{ }) }"
#   echo
#   ruby -e "puts %x(tmux list-keys -T prefix).lines.sort_by { |l| l.split.drop_while { |w| w =~ /\A(bind-key|-\w)\z/ }.drop(2).join(%q{ }) }"
#   printf "\n### Modal bindings\n\nunbind-key -t vi-copy -a\n\n"
#   ruby -e "puts %x(tmux list-keys -t vi-copy).lines.sort_by { |l| l.split.drop_while { |w| w =~ /\A(bind-key|-\w)\z/ }.drop(2).join(%q{ }) }"
# ' > /tmp/tmux.conf

### Server options

# set-option -gs buffer-limit 20
# set-option -gs default-terminal "screen"
set-option -gs escape-time 0
# set-option -gs exit-unattached off
# set-option -gs focus-events off
# set-option -gs history-file ""
# set-option -gs message-limit 100
# set-option -gs quiet off
# set-option -gs set-clipboard on
# set-option -gs terminal-overrides "xterm*:XT:Ms=\E]52;%p1%s;%p2%s\007:Cs=\E]12;%p1%s\007:Cr=\E]112\007:Ss=\E[%p1%d q:Se=\E[2 q,screen*:XT"

### Session options

# set-option -g assume-paste-time 1
set-option -g base-index 1
# set-option -g bell-action any
# set-option -g bell-on-alert off
# set-option -g default-command ""
# set-option -g default-shell "/bin/bash"
# set-option -g destroy-unattached off
# set-option -g detach-on-destroy on
set-option -g display-panes-active-colour colour252
set-option -g display-panes-colour colour96
set-option -g display-panes-time 5000
set-option -g display-time 3000
set-option -g history-limit 65535
# set-option -g key-table "root"
# set-option -g lock-after-time 0
set-option -g lock-command "vlock"
set-option -g message-command-style fg=black,bg=colour96,italics
set-option -g message-style fg=black,bg=colour96,italics
set-option -g mouse on
set-option -g prefix C-Space
# set-option -g prefix2 None
set-option -g renumber-windows on
set-option -g repeat-time 5000
# set-option -g set-remain-on-exit off
set-option -g set-titles on
run-shell 'tmux set-option -g set-titles-string "$USER ❦ ${HOSTNAME:-$(hostname)} ❦ ##W" >/dev/null'
# set-option -g status on
# set-option -g status-interval 15
# set-option -g status-justify left
# set-option -g status-keys vi
set-option -g status-left ""
set-option -g status-left-length 0
set-option -g status-left-style fg=colour252,bg=colour234
# set-option -g status-position bottom
run-shell 'tmux set-option -g status-right "$USER@${HOSTNAME:-$(hostname)}" >/dev/null'
# set-option -g status-right-length 40
set-option -g status-right-style fg=colour252,bg=colour234
set-option -g status-style fg=colour252,bg=colour234
set-option -g update-environment \
	"DISPLAY WINDOWID XAUTHORITY \
	SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION \
	DBUS_SESSION_BUS_ADDRESS \
	GPG_AGENT_INFO GPG_TTY"
# set-option -g visual-activity off
# set-option -g visual-bell off
# set-option -g visual-silence off
# set-option -g word-separators " -_@"

### Window options

set-option -gw aggressive-resize on
# set-option -gw allow-rename on
# set-option -gw alternate-screen on
# set-option -gw automatic-rename on
# set-option -gw automatic-rename-format "#{?pane_in_mode,[tmux],#{pane_current_command}}#{?pane_dead,[dead],}"
set-option -gw clock-mode-colour colour252
# set-option -gw clock-mode-style 24
# set-option -gw force-height 0
# set-option -gw force-width 0
# set-option -gw main-pane-height 24
# set-option -gw main-pane-width 80
set-option -gw mode-keys vi
set-option -gw mode-style fg=colour0,bg=colour96
# set-option -gw monitor-activity off
# set-option -gw monitor-silence 0
# set-option -gw other-pane-height 0
# set-option -gw other-pane-width 0
set-option -gw pane-active-border-style fg=colour96,bg=colour0
set-option -gw pane-base-index 1
set-option -gw pane-border-style fg=colour236,bg=colour0
# set-option -gw remain-on-exit off
# set-option -gw synchronize-panes off
# set-option -gw window-active-style default
set-option -gw window-status-activity-style fg=colour0,bg=colour96,italics
set-option -gw window-status-bell-style fg=colour0,bg=colour96,italics
set-option -gw window-status-current-format "#I #W#F"
set-option -gw window-status-current-style fg=colour252,bg=colour0,bold,italics
set-option -gw window-status-format "#I #W#{?window_flags,#{window_flags}, }"
# set-option -gw window-status-last-style default
# set-option -gw window-status-separator " "
set-option -gw window-status-style fg=colour252,bg=colour234
# set-option -gw window-style default
# set-option -gw wrap-search on
# set-option -gw xterm-keys off

### Keybindings

unbind-key -a

bind-key -T root MouseDrag1Pane   if-shell -F -t = "#{mouse_any_flag}" 'if -Ft= "#{pane_in_mode}" "copy-mode -M" "send-keys -M"' "copy-mode -M"
# bind-key -T root MouseDown3Pane   if-shell -F -t = #{mouse_any_flag} "select-pane -t=; send-keys -M" "select-pane -mt="
bind-key -T root WheelUpPane      if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" 'if -Ft= "#{pane_in_mode}" "send-keys -M" "copy-mode -et="'
bind-key -T root WheelDownStatus  next-window
bind-key -T root WheelUpStatus    previous-window
bind-key -T root MouseDrag1Border resize-pane -M
bind-key -T root MouseDown1Pane   select-pane -t = \; send-keys -M
bind-key -T root MouseDown1Status select-window -t =

bind-key    -T prefix !       break-pane
bind-key    -T prefix =       choose-buffer
bind-key    -T prefix D       choose-client
bind-key    -T prefix w       choose-tree -u
bind-key    -T prefix W       choose-window
bind-key    -T prefix t       clock-mode
bind-key    -T prefix :       command-prompt ; bind-key -T prefix \; command-prompt
# bind-key  -T prefix f       command-prompt "find-window '%%'"
# bind-key  -T prefix .       command-prompt "move-window -t '%%'"
bind-key    -T prefix '$'     command-prompt -I "#S" "rename-session '%%'"
bind-key    -T prefix ,       command-prompt -I "#W" "rename-window '%%'"
# bind-key  -T prefix '       command-prompt -p index "select-window -t ':%%'"
bind-key    -T prefix x       confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind-key    -T prefix X       confirm-before -p "kill-window #W? (y/n)" kill-window
bind-key    -T prefix /       copy-mode -e \; send-keys "/"
bind-key    -T prefix \       copy-mode -e \; send-keys "?" ; bind-key -T prefix C-b copy-mode -e -u
bind-key    -T prefix -       run-shell 'while tmux delete-buffer; do :; done' \; display-message 'Cleared buffers'
bind-key    -T prefix d       detach-client
# bind-key  -T prefix i       display-message
bind-key    -T prefix q       display-panes
# bind-key  -T prefix ;       last-pane
bind-key    -T prefix "'"     last-window
bind-key    -T prefix '#'     list-buffers
bind-key    -T prefix ?       list-keys
bind-key    -T prefix c       new-window -c "#{pane_current_path}"
# bind-key  -T prefix Space   next-layout
bind-key -r -T prefix ]       next-window
# bind-key  -T prefix M-n     next-window -a
bind-key    -T prefix C-p     paste-buffer
bind-key -r -T prefix [       previous-window
# bind-key  -T prefix M-p     previous-window -a
bind-key    -T prefix M-r     refresh-client
bind-key -r -T prefix J       resize-pane -D 1
bind-key -r -T prefix H       resize-pane -L 1
bind-key -r -T prefix L       resize-pane -R 1
bind-key -r -T prefix K       resize-pane -U 1
bind-key -r -T prefix z       resize-pane -Z
bind-key    -T prefix o       rotate-window
bind-key    -T prefix O       rotate-window -D
bind-key    -T prefix M-1     select-layout even-horizontal
bind-key    -T prefix M-2     select-layout even-vertical
bind-key    -T prefix M-3     select-layout main-horizontal
bind-key    -T prefix M-4     select-layout main-vertical
bind-key    -T prefix M-5     select-layout tiled
bind-key -r -T prefix C-j     select-pane -D
bind-key -r -T prefix C-h     select-pane -L
bind-key -r -T prefix C-l     select-pane -R
bind-key -r -T prefix C-k     select-pane -U
bind-key    -T prefix j       select-pane -t :.+
bind-key    -T prefix k       select-pane -t :.-
bind-key    -T prefix 0       select-window -t :=0
bind-key    -T prefix 1       select-window -t :=1
bind-key    -T prefix 2       select-window -t :=2
bind-key    -T prefix 3       select-window -t :=3
bind-key    -T prefix 4       select-window -t :=4
bind-key    -T prefix 5       select-window -t :=5
bind-key    -T prefix 6       select-window -t :=6
bind-key    -T prefix 7       select-window -t :=7
bind-key    -T prefix 8       select-window -t :=8
bind-key    -T prefix 9       select-window -t :=9
bind-key    -T prefix C-Space send-prefix
bind-key    -T prefix "~"     show-messages
bind-key    -T prefix s       split-window -c "#{pane_current_path}"
bind-key    -T prefix v       split-window -c "#{pane_current_path}" -h
# bind-key    -T prefix C-z     suspend-client
bind-key -r -T prefix M-j     swap-pane -D
bind-key -r -T prefix M-k     swap-pane -U
# bind-key  -T prefix L       switch-client -l
bind-key -r -T prefix )       switch-client -n
bind-key -r -T prefix (       switch-client -p

bind-key    -T prefix @       join-pane -t :-
bind-key -r -T prefix M-l     swap-pane -D
bind-key -r -T prefix M-h     swap-pane -U
bind-key -r -T prefix }       swap-window -s : -t :+
bind-key -r -T prefix {       swap-window -s : -t :-

bind-key    -T prefix C-m     set-option -w monitor-activity \; run-shell 'tmux display-message "$(tmux show-option -w monitor-activity)"'
bind-key    -T prefix a       set-option automatic-rename on
bind-key    -T prefix C-r     source-file ~/.tmux.conf \; display-message "Reloaded ~/.tmux.conf"

bind-key    -T prefix C       new-window -c /
bind-key    -T prefix n       command-prompt 'new-window -c "#{pane_current_path}" "%%"'
bind-key    -T prefix N       command-prompt 'new-window -c / "%%"'
bind-key    -T prefix S       command-prompt 'split-window -c #{pane_current_path} "%%"'
bind-key    -T prefix V       command-prompt 'split-window -c #{pane_current_path} -h "%%"'
bind-key    -T prefix e       new-window -c "#{pane_current_path}" vim
bind-key    -T prefix E       split-window -c "#{pane_current_path}" -h vim
bind-key    -T prefix h       new-window -c "#{pane_current_path}" env TERM=screen-256color htop
bind-key    -T prefix r       new-window -c "#{pane_current_path}" sudo --set-home --login bash -c 'chown 0 "$(tty)"; exec "$SHELL"' \; rename-window root
bind-key    -T prefix R       split-window -b -c "#{pane_current_path}" sudo --set-home --login bash -c 'chown 0 "$(tty)"; exec "$SHELL"' \; rename-window root

if-shell '((EUID > 0))' '\
	bind-key i new-window -c ~/.weechat env TERM=screen-256color weechat \; rename-window irc ; \
	bind-key m new-window -c ~/Downloads env TERM=screen-256color muttlaunch -f ; \
	bind-key M new-window -c ~/Mail -t 0 \; send-keys -t 0 "mbwatch-daemon " \; rename-window Mail \; move-window -r ; \
	bind-key p new-window -c ~/Downloads pianobarlaunch pandora.com/g2813859@mvrht.com ; \
	bind-key P new-window -c ~/Media/Music env TERM=screen-256color cmus ; \
'

### Modal bindings

unbind-key -t vi-copy -a

bind-key -t vi-copy                 A append-selection
bind-key -t vi-copy                 ^ back-to-indentation
bind-key -t vi-copy                 v begin-selection
bind-key -t vi-copy    MouseDrag1Pane begin-selection
bind-key -t vi-copy                 L bottom-line
bind-key -t vi-copy               C-c cancel
bind-key -t vi-copy                 q cancel
bind-key -t vi-copy            Escape clear-selection
bind-key -t vi-copy                 D copy-end-of-line
bind-key -t vi-copy               C-j copy-pipe "clip"
bind-key -t vi-copy             Enter copy-pipe "clip"
bind-key -t vi-copy                 y copy-pipe "clip"
bind-key -t vi-copy                 j cursor-down
bind-key -t vi-copy              Down cursor-down
bind-key -t vi-copy               C-h cursor-left
bind-key -t vi-copy                 h cursor-left
bind-key -t vi-copy            BSpace cursor-left
bind-key -t vi-copy              Left cursor-left
bind-key -t vi-copy                 l cursor-right
bind-key -t vi-copy             Right cursor-right; bind-key -t vi-copy Space cursor-right
bind-key -t vi-copy                 k cursor-up
bind-key -t vi-copy                Up cursor-up
bind-key -t vi-copy               '$' end-of-line
bind-key -t vi-copy                 : goto-line
bind-key -t vi-copy               C-d halfpage-down
bind-key -t vi-copy               C-u halfpage-up
bind-key -t vi-copy                 G history-bottom
bind-key -t vi-copy                 g history-top
bind-key -t vi-copy                \; jump-again
bind-key -t vi-copy                 F jump-backward
bind-key -t vi-copy                 f jump-forward
bind-key -t vi-copy                 , jump-reverse
bind-key -t vi-copy                 T jump-to-backward
bind-key -t vi-copy                 t jump-to-forward
bind-key -t vi-copy                 M middle-line
bind-key -t vi-copy                 W next-space
bind-key -t vi-copy                 E next-space-end
bind-key -t vi-copy                 w next-word
bind-key -t vi-copy                 e next-word-end
bind-key -t vi-copy                 o other-end
bind-key -t vi-copy               C-f page-down
bind-key -t vi-copy             NPage page-down
bind-key -t vi-copy               C-b page-up
bind-key -t vi-copy             PPage page-up
bind-key -t vi-copy                 B previous-space
bind-key -t vi-copy                 b previous-word
bind-key -t vi-copy               C-v rectangle-toggle
bind-key -t vi-copy               C-e scroll-down
bind-key -t vi-copy                 J scroll-down
bind-key -t vi-copy     WheelDownPane scroll-down
bind-key -t vi-copy            C-Down scroll-down
bind-key -t vi-copy               C-y scroll-up
bind-key -t vi-copy                 K scroll-up
bind-key -t vi-copy       WheelUpPane scroll-up
bind-key -t vi-copy              C-Up scroll-up
bind-key -t vi-copy                 n search-again
bind-key -t vi-copy                 ? search-backward
bind-key -t vi-copy                 / search-forward
bind-key -t vi-copy                 N search-reverse
bind-key -t vi-copy                 V select-line
bind-key -t vi-copy               '"' start-named-buffer
bind-key -t vi-copy                 1 start-number-prefix
bind-key -t vi-copy                 2 start-number-prefix
bind-key -t vi-copy                 3 start-number-prefix
bind-key -t vi-copy                 4 start-number-prefix
bind-key -t vi-copy                 5 start-number-prefix
bind-key -t vi-copy                 6 start-number-prefix
bind-key -t vi-copy                 7 start-number-prefix
bind-key -t vi-copy                 8 start-number-prefix
bind-key -t vi-copy                 9 start-number-prefix
bind-key -t vi-copy                 0 start-of-line
bind-key -t vi-copy                 H top-line
