
#                 /  _/
#       _/_/_/      _/_/_/
#    _/    _/  _/  _/
#   _/    _/  _/  _/
#    _/_/_/  _/    _/_/
#       _/
#  _/_/     guns <self@sungpae.com>


# NOTE: In general we want to only change interactive functionality


[user]
    name  = guns
    email = self@sungpae.com

[core]
    whitespace   = trailing-space,space-before-tab
    excludesfile = ~/.gitignore

[color]
    ui = auto

[color.diff]
    meta           = blue
    mnemonicprefix = true

[diff]
    renames = copies

[interactive]
    singlekey = true

[merge]
    tool = vimdiff

[push]
    default = upstream

[rerere]
    enabled = true

[alias]
    # index operations
    a      = add
    aa     = add . --all
    ai     = add --interactive
    af     = add --force
    ap     = add --patch
    ac     = !git add . && git commit -a
    acv    = !git add . && git commit -a -v
    acm    = !git add . && git commit -a -m
    rs     = reset
    rshard = reset --hard

    # committing
    c   = commit
    cv  = commit -v
    cm  = commit -m
    ca  = commit -a
    cav = commit -a -v
    cam = commit -a -m

    # merging and rebasing
    m   = merge --no-ff --stat --log --edit
    mm  = merge --no-ff --stat --log --no-edit
    mf  = merge --ff-only --no-edit
    rb  = rebase
    rbi = rebase -i
    cp  = cherry-pick

    # log
    l    = log --relative-date --decorate --graph
    lf   = log --relative-date --decorate --graph --first-parent
    lst  = log --relative-date --decorate --graph --stat
    lfst = log --relative-date --decorate --graph --stat --first-parent

    lp   = log --relative-date --decorate --patch --stat
    lfp  = log --relative-date --decorate --patch --stat --first-parent
    lpw  = log --relative-date --decorate --patch --stat -w
    wlp  = log --relative-date --decorate --patch --stat --word-diff=color

    l1   = log --relative-date --decorate --patch --stat -1
    l1w  = log --relative-date --decorate --patch --stat -1 -w
    wl1  = log --relative-date --decorate --patch --stat -1 --word-diff=color

    f    = log --graph --pretty=format:'%C(yellow)%h %C(cyan)%aN %C(blue)%ar%C(magenta)%d %C(reset)%s'
    fa   = log --graph --pretty=format:'%C(yellow)%h %C(cyan)%aN %C(blue)%ar%C(magenta)%d %C(reset)%s' --all
    ff   = log --graph --pretty=format:'%C(yellow)%h %C(cyan)%aN %C(blue)%ar%C(magenta)%d %C(reset)%s' --first-parent

    lg   = log --patch -G
    lgi  = log --patch -i -G

    # branches
    br   = branch
    bra  = branch -a
    brd  = branch -d
    brdd = branch -D
    brm  = branch -m
    co   = checkout
    cob  = checkout -b
    cot  = checkout -t
    sb   = show-branch --color

    # tags
    tagd = tag -d
    tagf = tag -f

    # diff && patch
    di   = diff
    diw  = diff -w
    wdi  = diff --word-diff=color

    dih  = diff HEAD
    dihw = diff HEAD -w
    wdih = diff HEAD --word-diff=color

    dis  = diff --summary --stat

    fp   = format-patch
    fps  = format-patch --stdout

    # remote
    r            = remote -v
    up           = remote update --prune
    shallowclone = clone --depth=1

    # stash
    sta     = stash
    stap    = stash -p
    stau    = stash -u
    staup   = stash -u -p
    stal    = stash list
    stalp   = stash list -p
    stapop  = stash pop
    stashow = stash show -p

    # grep
    g    = grep -P
    gi   = grep -Pi
    gw   = grep -Pw
    gf   = grep -F
    gif  = grep -Fi
    giw  = grep -Piw
    gifw = grep -Fiw

    # misc
    ls  = ls-files
    lso = ls-files -o
    lsu = ls-files -o --exclude-standard
    st  = status --short
    fd  = clean -fd
    fdx = clean -fdx
    rp  = rev-parse
