snippet #! "#!" b
#!/usr/bin/env node
endsnippet

snippet req "require" w
const ${2:$1} = require('${1}')
endsnippet

snippet co "const" w
const $1 = $0
endsnippet

snippet v "var" b
var $0
endsnippet

snippet l "let" b
let $1 = $0
endsnippet

snippet t "this" w
this
endsnippet

snippet /^im/ "import" r
import $0 from '$1'
endsnippet

snippet fori "for i" w
for (${1:let }${2:i} = 0; $2 < ${3:n}; $2++) {
	$0
}
endsnippet

snippet forir "for i reverse" w
for (${1:let }${2:i} = ${3:n - 1}; $2 >= 0; $2--) {
	$0
}
endsnippet

snippet forl "for of" w
for (${1:let }${2:x} of ${3:xs}) {
	$0
}
endsnippet

snippet keyvalue "key: value" w
$1: $0
endsnippet

snippet N "new" w
new $0
endsnippet

snippet w "window" w
window
endsnippet

snippet d "document" w
document
endsnippet

snippet cel "createElement" w
document.createElement($0)
endsnippet

snippet ctn "createTextNode" w
document.createTextNode($0)
endsnippet

snippet apc "appendChild" w
appendChild($0)
endsnippet

snippet id "getElementById" w
document.getElementById($0)
endsnippet

snippet ael "addEventListener" w
addEventListener($0)
endsnippet

snippet pr "prototype" w
prototype
endsnippet

snippet pv "prototype property value" w
$1.prototype.$2 = $0
endsnippet

snippet pf "prototype function" w
$1.prototype.$2 = function ($3) {
	$0
}
endsnippet

snippet f "function" w
function ${1}${1/.+/ /}(${2}) {
	$0
}
endsnippet

snippet r "return" w
return $0
endsnippet

snippet if "if" w
if ($1) {
	$0
}
endsnippet

snippet el "else" w
else {
	$0
}
endsnippet

snippet L "console.log" w
console.log($0)
endsnippet

snippet /\.l/ "length" r
.length
endsnippet

snippet strict "use strict" b
'use strict'
endsnippet

snippet M "Math" w
Math.
endsnippet

snippet rand "Math.random" w
Math.random()
endsnippet

snippet sw "switch" w
switch ($1) {
case $0:
	break
default:
	break
}
endsnippet

snippet sett "setTimeout" w
window.setTimeout($0, $1)
endsnippet
