#!/usr/bin/env ruby

target = File.expand_path(ARGV.first)

# Cross-platform way of finding an executable in the $PATH.
#
#   which('ruby') #=> /usr/bin/ruby
def which(cmd)
  exts = ENV['PATHEXT'] ? ENV['PATHEXT'].split(';') : ['']
  ENV['PATH'].split(File::PATH_SEPARATOR).each do |path|
    exts.each { |ext|
      exe = "#{path}/#{cmd}#{ext}"
      return exe if File.executable? exe
    }
  end
  return nil
end

if RUBY_PLATFORM =~ /win32/i
  js_cmd = 'cscript'
  runjslint_ext = 'wsf'
  plugin_path = File.join(ENV['HOME'], 'vimfiles')
else
  if ENV['JS_CMD']
    js_cmd = ENV['JS_CMD']
  else
    js_cmd = ['node', 'nodejs', 'js'].find { |ex| which ex }
  end

  if !js_cmd and File.exist?('/System/Library/Frameworks/JavaScriptCore.framework/Resources/jsc')
    js_cmd = '/System/Library/Frameworks/JavaScriptCore.framework/Resources/jsc'
  end

  runjslint_ext = 'js'

  plugin_path = File.join(ENV['HOME'], '.vim')
end

# check for pathogen
pathogen_path = File.join(plugin_path, 'bundle', 'jslint.vim')
if File.exist? pathogen_path
  plugin_path = pathogen_path
else
  pathogen_path = File.join(plugin_path, 'bundle', 'jslint')
  plugin_path = pathogen_path if File.exist?(pathogen_path)
end

Dir.chdir(File.join(plugin_path, 'ftplugin', 'javascript', 'jslint')) do |dir|
  IO.popen("#{js_cmd} runjslint.#{runjslint_ext}", 'r+') do |jslint|
    jslint.write(File.open(target, 'r') { |f| f.read })
    jslint.close_write
    $stdout.write(jslint.read)
  end
end
