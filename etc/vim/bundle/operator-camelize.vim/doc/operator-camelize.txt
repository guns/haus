*operator-camelize.txt* *operator-camelize*

Author:
  tyru <tyru.exe@gmail.com>
Version: 0.0.6
License:
NEW BSD LICENSE {{{
  Copyright (c) 2010, tyru
  All rights reserved.

  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

      * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
      * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
      * Neither the name of the tyru nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
}}}

==============================================================================
CONTENTS						*operator-camelize-contents*

Introduction		|operator-camelize-introduction|
Interface			|operator-camelize-interface|
  Keymappings		|operator-camelize-keymappings|
  Variables			|operator-camelize-variables|
  Functions			|operator-camelize-functions|
Changelog			|operator-camelize-changelog|


==============================================================================
INTRODUCTION						*operator-camelize-introduction* {{{

|operator-camelize| is a Vim plugin to provide an operator
to camelize/decamelize a specified text.

Requirements:
- |operator-user| (vimscript#2692)

}}}
==============================================================================
INTERFACE				*operator-camelize-interface* {{{
------------------------------------------------------------------------------
KEYMAPPINGS					*operator-camelize-keymappings* {{{

<Plug>(operator-camelize)
	Do camelize.

<Plug>(operator-decamelize)
	Do decamelize.

<Plug>(operator-camelize-toggle)
	Do decamelize if a word is camelized.
	Do camelize otherwise.


No default keymappings.
Please map yourself as follows: >
	map <Leader>c <Plug>(operator-camelize)
	map <Leader>C <Plug>(operator-decamelize)
<

}}}
------------------------------------------------------------------------------
VARIABLES					*operator-camelize-variables* {{{

g:operator_camelize_all_uppercase_action		*g:operator_camelize_all_uppercase_action*
									(Default: "nop")
		<Plug>(operator-camelize)'s action for word whose characters are all capitals like 'CAMEL'.

		e.g., {value} is "WORD"
		option value		{value} ~
		"nop"				"WORD"
		"lowercase" 		"word"
		"camelize"			"Word"

g:operator_decamelize_all_uppercase_action		*g:operator_decamelize_all_uppercase_action*
									(Default: "nop")
		<Plug>(operator-decamelize)'s action for word whose characters are all capitals like 'CAMEL'.

		e.g., {value} is "WORD"
		option value		{value} ~
		"nop"				"WORD"
		"lowercase" 		"word"

g:operator_camelize_detect_function		*g:operator_camelize_detect_function*
									(Default: "operator#camelize#is_camelized")
	Specify the function to detect
	if a argument {word} is camelized, or not.

}}}
------------------------------------------------------------------------------
FUNCTIONS					*operator-camelize-functions* {{{

				*operator#camelize#load()*
operator#camelize#load()
	Load autoload/operator/camelize.vim
	and plugin/operator/camelize.vim .

operator#camelize#is_camelized({word})
	Return true if {word} is camelized.
	Return false otherwise.

}}}
}}}
==============================================================================
CHANGELOG						*operator-camelize-changelog* {{{

0.0.0:
- Initial upload
0.0.1:
- Refactoring.
0.0.2:
- Implement g:operator_camelize_all_uppercase_action.
- Fix document descriptions.
0.0.3:
- Fix bug: When selected in blockwise visual mode,
  unnecessary newline is inserted at the bottom.
- Fix bug: If there are two more than words in selected range,
  head character is not camelized.
- A lot of internal changes.
0.0.4:
- Fix doc: operator-replace => operator-camelize (thanks thinca for reporting)
- Support camelCase. not only PascalCase. (thanks thinca for reporting)
- Add operator#camelize#load().
0.0.5:
- Add <Plug>(operator-camelize-toggle)
0.0.5a:
- Fix problem that it evaluates lower camelcase as snakecase. (e.g., camelCase).
0.0.6:
- Fix problem that "vim" is recognized as the camelized word.
- Deprecate g:operator_camelize_all_uppercase_action = "decamelize"
- Add variable g:operator_camelize_detect_function.

}}}
==============================================================================
vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl:noet:fdm=marker:fen
